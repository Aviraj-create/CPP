#include<iostream>

using namespace std;

#define n 100

class Stack{

    int* arr;
    int top;
    public:

    Stack(){
        arr=new int[n];
        top=-1;
    }

    void push(int x){
        if(top==n-1)
        //If the stack container is full then last element will be (n-1)th position as they are in an array
        {
            cout << "Stack Overflow" << endl;
            return;
        }
        top++;
        arr[top]=x;
    }
    void pop(){
        if(top==-1){
            cout << "Stack is empty"<< endl;
            return;
        }
        top--;
    }
    int Top(){
        if(top==-1){

            cout << "Stack is empty"<< endl;
        }

        return arr[top];

    }
    bool empty(){
        return top==-1;
    }

};

int main(){
    Stack A;

    A.push(1);
    A.push(4);
    A.push(9); 
    A.push(7);

    cout << A.Top() << endl;
    A.pop();
    cout << A.Top() << endl;
    A.pop();
    cout << A.Top() << endl;
    A.pop() ; 
    cout << A.Top() << endl;
    A.pop(); 
    cout << A.Top() << endl;
    A.push(8);
    cout << A.Top() << endl;
    A.pop(); 
    cout <<A.empty()<< endl;;
    return 0;
}
